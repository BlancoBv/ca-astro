---
import CardPdf from "@components/cards/CardPdf.astro";
import Layout from "@layouts/Layout.astro";
import { number } from "astro:schema";
import moment from "moment";

const { searchParams } = Astro.url;

const year = searchParams.get("year");

const minutas: { files?: { url: string; fileName: string }[] } = await fetch(
  "http://localhost:4321/api/minutas"
).then((res) => res.json());

const years = new Set<number>();

if (minutas.files?.length) {
  minutas.files.forEach((el) => {
    const date = el.fileName.split(";")[1].split(".")[0];
    const year = moment(date).year();
    years.add(year);
  });
}

if (year) {
  minutas.files?.filter((el) => {
    const date = el.fileName.split(";")[1].split(".")[0];
    const yearFile = moment(date).year();
    return yearFile === Number(year);
  });
}
---

<Layout title="Minutas del CA">
  <main class="prose max-w-full p-4">
    <h1>Minutas</h1>
    <!--     <form class="flex gap-4 items-center mb-4 not-prose">
      <label class="form-control w-full max-w-xs">
        <div class="label">
          <span class="label-text">AÃ±o de consulta</span>
        </div>
        <select class="select select-bordered">
          <option disabled selected>Todas</option>
          {Array.from(years).map((el) => <option value={el}>{el}</option>)}
        </select>
      </label>
      <button class="btn btn-primary" type="submit">Filtrar</button>
    </form> -->
    <div class="not-prose grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
      {
        minutas?.files?.map((el) => (
          <CardPdf fileName={el.fileName} url={el.url} />
        ))
      }
    </div>
  </main>
</Layout>
