---
import { formatDate } from "@assets/format";

import ListaProyectosMiembros2 from "@components/listas/ListaProyectosMiembros2.vue";

import ListaPublicacionesMiembros2 from "@components/listas/ListaPublicacionesMiembros2.vue";
import Layout from "@layouts/Layout.astro";
import { Image } from "astro:assets";

const { uuid } = Astro.params;

interface icons {
  facebook: string;
  x: string;
  correo: string;
  linkedin: string;
  otro: string;
}

const miembro: {
  response: {
    nombreCompleto: string;
    puesto: string;
    imgPerfil: string;
    bio: string;
    resumen: string;
    gradoEstudio: string;
    tipoMiembro: "lider" | "miembro";
    proyectos: {
      clave: string;
      titulo: string;
      fechaInicio: string;
      fechaTermino: string;
      fechaInicioEntrega: string;
      fechaTerminoEntrega: string;
    }[];
    publicaciones: {
      clave: string;
      titulo: string;
      year: string;
      ISSN: string;
    }[];
    contactos: { tipo: string; url: string }[];
  };
} = await fetch(
  `http://localhost:4321/api/miembros?uuid=${uuid}&includeProyectos=true&includePublicaciones=true`
).then((res) => res.json());

const redesSocialesIcon: icons = {
  facebook: "bi bi-facebook",
  x: "bi bi-twitter-x",
  correo: "bi bi-envelope-fill",
  linkedin: "bi bi-linkedin",
  otro: "bi bi-link-45deg",
};

if (!miembro || miembro.hasOwnProperty("msg")) {
  return Astro.redirect("/404");
}

miembro.response.proyectos.forEach((el) => {
  el.fechaInicio = formatDate(el.fechaInicio, "LL");
  el.fechaTermino = formatDate(el.fechaTermino, "LL");
  el.fechaInicioEntrega = el.fechaInicioEntrega
    ? formatDate(el.fechaInicioEntrega, "LL")
    : el.fechaInicioEntrega;
  el.fechaTerminoEntrega = el.fechaTerminoEntrega
    ? formatDate(el.fechaTerminoEntrega, "LL")
    : el.fechaTerminoEntrega;
}); //formateo de fecha para evitar error de momentjs e hidratation en vue
---

<Layout
  title={`${miembro.response.gradoEstudio}. ${miembro.response.nombreCompleto}`}
>
  <main class="prose max-w-full p-4">
    <div
      class="stats stats-vertical lg:stats-horizontal bg-base-100 shadow-sm w-full not-prose"
    >
      <div class="stat">
        <div class="stat-figure text-secondary">
          <div
            class="avatar"
            class:list={[
              { "avatar-placeholder": !miembro.response?.imgPerfil },
            ]}
          >
            <div
              class="w-32 rounded-full"
              class:list={[
                {
                  "bg-neutral text-neutral-content":
                    !miembro.response?.imgPerfil,
                },
              ]}
            >
              {
                miembro.response?.imgPerfil ? (
                  <Image
                    src={miembro.response.imgPerfil}
                    alt={miembro.response.nombreCompleto}
                    class="aspect-square"
                    width={100}
                    height={100}
                    loading="eager"
                  />
                ) : (
                  <span class="text-3xl">
                    {miembro.response.nombreCompleto.charAt(0)}
                  </span>
                )
              }
            </div>
          </div>
        </div>
        <div class="stat-value text-balance">
          {miembro.response.gradoEstudio}. {miembro.response.nombreCompleto}
        </div>
        <div class="stat-title">{miembro.response.puesto.toUpperCase()}</div>
        <div class="stat-desc text-secondary">
          {miembro.response.tipoMiembro.toUpperCase()}
        </div>
      </div>

      <div class="stat">
        <div class="stat-figure text-secondary">
          <i class="bi bi-globe text-2xl"></i>
        </div>
        <div class="stat-title">Enlaces de contacto</div>
        <div class="stat-value">
          {
            miembro.response.contactos.length > 0 ? (
              <span>{miembro.response.contactos.length}</span>
            ) : (
              <span class="text-balance">Sin información de contacto.</span>
            )
          }
        </div>
        {
          miembro.response.contactos.length > 0 && (
            <div class="stat-actions flex flex-wrap gap-2">
              {miembro.response.contactos.map((el) => (
                <a
                  class="btn"
                  href={`${el.tipo === "correo" ? "mailto:" : ""}${el.url}`}
                  aria-label={el.tipo}
                  target="_blank"
                >
                  <i class={redesSocialesIcon[el.tipo as keyof icons]} />
                </a>
              ))}
            </div>
          )
        }
      </div>
    </div>
    <!-- <div
      class="stats md:grid-cols-2 shadow stats-vertical md:stats-horizontal w-full not-prose min-h-40"
    >
      <div class="stat flex flex-col md:inline-grid place-items-center place">
        <div class="stat-figure text-secondary size-40">
          {
            miembro.response?.imgPerfil && (
              <div class="avatar size-full">
                <div class="rounded-full">
                  <Image
                    src={miembro.response.imgPerfil}
                    alt={miembro.response.nombreCompleto}
                    class="aspect-square"
                    width={100}
                    height={100}
                    loading="eager"
                  />
                </div>
              </div>
            )
          }
          {
            !miembro.response?.imgPerfil && (
              <div class="avatar avatar-placeholder size-full">
                <div class="bg-neutral text-neutral-content rounded-full">
                  <span class="text-3xl">
                    {miembro.response.nombreCompleto.charAt(0)}
                  </span>
                </div>
              </div>
            )
          }
        </div>
        <div class="stat-value text-wrap text-center">
          {miembro.response.gradoEstudio}. {miembro.response.nombreCompleto}
        </div>
        <div class="stat-title">{miembro.response.puesto.toUpperCase()}</div>
        <div class="stat-desc text-wrap">
          {miembro.response.tipoMiembro.toUpperCase()}
        </div>
      </div>
      <div class="stat place-items-center">
        <div class="stat-figure text-secondary">
          <i class="bi bi-share-fill text-2xl"></i>
        </div>
        <div class="stat-title">Enlaces de contacto</div>
        <div
          class="stat-value text-base-content flex flex-wrap gap-4 text-wrap"
        >
          {
            miembro.response.contactos.length > 0 &&
              miembro.response.contactos.map((el) => (
                <a
                  class="hover:text-primary hover:scale-105 duration-100 ease-in"
                  href={`${el.tipo === "correo" ? "mailto:" : ""}${el.url}`}
                  aria-label={el.tipo}
                  target="_blank"
                >
                  <i class={redesSocialesIcon[el.tipo as keyof icons]} />
                </a>
              ))
          }
          {
            miembro.response.contactos.length < 1 && (
              <span>Sin información de contacto.</span>
            )
          }
        </div>
      </div>
    </div> -->
    <p>{miembro.response.resumen}</p>
    <h2 class="mt-0">Proyectos</h2>

    <ListaProyectosMiembros2 data={miembro.response.proyectos} client:visible />

    <h2 class="mt-0">Publicaciones</h2>
    <ListaPublicacionesMiembros2
      data={miembro.response.publicaciones}
      client:visible
    />
  </main>
</Layout>
