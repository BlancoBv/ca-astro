---
import { formatDate } from "@assets/format";
import Layout from "@layouts/Layout.astro";
import { Image } from "astro:assets";

const { id } = Astro.params;

interface icons {
  facebook: string;
  x: string;
  correo: string;
  linkedin: string;
  otro: string;
}

const miembro: {
  response: {
    nombreCompleto: string;
    puesto: string;
    imgPerfil: string;
    bio: string;
    resumen: string;
    gradoEstudio: string;
    proyectos: {
      clave: string;
      titulo: string;
      fechaInicio: string;
      fechaTermino: string;
    }[];
    contactos: { tipo: string; url: string }[];
  };
} = await fetch(
  `http://localhost:4321/api/miembros?idmiembro=${id}&includeProyectos=true`
).then((res) => res.json());

const getMiembro = async (id: number) => {
  if (id) {
    const response = await fetch(
      `http://localhost:4321/api/miembros?idmiembro=${id}`
    ).then((res) => res.json());

    return response.response.nombreCompleto;
  }
  return "";
};

const redesSocialesIcon: icons = {
  facebook: "bi bi-facebook",
  x: "bi bi-twitter-x",
  correo: "bi bi-envelope-fill",
  linkedin: "bi bi-linkedin",
  otro: "bi bi-link-45deg",
};

if (!miembro) {
  return Astro.redirect("/404");
}

console.log(miembro.response);
---

<Layout title={miembro.response.nombreCompleto}>
  <main class="prose max-w-full p-4">
    <!--   <div class="grid grid-cols-1 lg:grid-cols-3 gap-4">
      <div class="not-prose flex justify-center items-center">
        <Image
          class="object-contain size-60"
          src={miembro.response.imgPerfil}
          alt={miembro.response.nombreCompleto}
          loading="lazy"
          inferSize
        />
      </div>
      <div class="col-span-2">
        <h1>
          {miembro.response.gradoEstudio}. {miembro.response.nombreCompleto}
        </h1>
        <span class="text-secondary-content"
          >{miembro.response.puesto.toUpperCase()}</span
        >
        <p class="text-justify">{miembro.response.resumen}</p>
      </div>
    </div> -->
    <div
      class="stats md:grid-cols-2 shadow stats-vertical md:stats-horizontal w-full not-prose min-h-40"
    >
      <div class="stat flex flex-col md:inline-grid place-items-center place">
        <div class="stat-figure text-secondary size-40">
          <div class="avatar size-full">
            <div class="rounded-full">
              <Image
                src={miembro.response.imgPerfil}
                alt={miembro.response.nombreCompleto}
                class="aspect-square"
                width={100}
                height={100}
                loading="lazy"
              />
            </div>
          </div>
        </div>
        <div class="stat-value text-wrap text-center">
          {miembro.response.gradoEstudio}. {miembro.response.nombreCompleto}
        </div>
        <div class="stat-title">{miembro.response.puesto.toUpperCase()}</div>
        <div class="stat-desc text-wrap">Lider</div>
      </div>
      <div class="stat place-items-center">
        <div class="stat-figure text-primary">
          <i class="bi bi-share-fill text-2xl"></i>
        </div>
        <div class="stat-title">Información de contacto</div>
        <div
          class="stat-value text-base-content flex flex-wrap gap-4 text-wrap"
        >
          {
            miembro.response.contactos.length > 0 &&
              miembro.response.contactos.map((el) => (
                <a
                  class="hover:text-primary hover:scale-105 duration-100 ease-in"
                  href={`${el.tipo === "correo" ? "mailto:" : ""}${el.url}`}
                  target="_blank"
                >
                  <i class={redesSocialesIcon[el.tipo as keyof icons]} />
                </a>
              ))
          }
          {
            miembro.response.contactos.length < 1 && (
              <span>Sin información de contacto.</span>
            )
          }
        </div>
        <!-- <div class="stat-desc">21% more than last month</div> -->
      </div>

      <!--      <div class="stat">
        <div class="stat-figure text-secondary">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            class="inline-block h-8 w-8 stroke-current"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M13 10V3L4 14h7v7l9-11h-7z"></path>
          </svg>
        </div>
        <div class="stat-title">Page Views</div>
        <div class="stat-value text-secondary">2.6M</div>
        <div class="stat-desc">21% more than last month</div>
      </div> -->
    </div>
    <p class="text-justify">{miembro.response.resumen}</p>
    <h2 class="mt-0">Proyectos</h2>
    <div class="overflow-x-auto">
      <table class="table table-zebra text-center not-prose">
        <!-- head -->
        <thead>
          <tr>
            <th>Clave</th>
            <th>Proyecto</th>
            <th>Duración</th>
            <th>Director</th>
            <th>Colaboradores</th>
            <th>Tipo</th>
          </tr>
        </thead>
        <tbody>
          {
            miembro.response.proyectos.length > 0 &&
              miembro.response.proyectos.map((el: any) => (
                <tr>
                  <th>{el.clave}</th>
                  <td>{el.titulo}</td>
                  <td>
                    {`${formatDate(el.fechaInicio, "LL")} a ${formatDate(el.fechaTermino, "LL")}`}{" "}
                  </td>
                  <td>{getMiembro(el.director)}</td>
                  <td>{el.otrosColaboradores ?? "---"}</td>
                  <td>{el.tipo}</td>
                </tr>
              ))
          }
          {
            miembro.response.proyectos.length < 1 && (
              <tr>
                <th colspan="6">Sin datos.</th>
              </tr>
            )
          }
        </tbody>
      </table>
    </div>
  </main>
</Layout>
